#!/usr/bin/env ruby

# This script will locally test the tables and options you have specified in
# your config passed in as ARGV[0].
#
# You will first need to have obtained historic data on the tables in your
# config file. To do this, run:
#
#   $ script/historic_data path/to/config.yml
#
# This script does not change any throughputs on DynamoDB whatsoever. The
# historic script data will hit CloudWatch fairly hard to get its data, though.

require_relative '../config/environment/common'
require 'timecop'
require 'optparse'

OptionParser.new do |opts|
  opts.on("--graph") do
    GRAPH = true
  end
end.parse!

if ARGV[0]
  DynamoAutoscale.setup_from_config(ARGV[0], dry_run: true)
elsif ARGV[0].nil?
  STDERR.puts "Usage: script/test path/to/config.yml"

  exit 1
elsif ARGV[0] and !File.exists?(ARGV[0])
  STDERR.puts "Usage: script/test path/to/config.yml"
  STDERR.puts "Error: The path you specified is to a file that does not exist."

  exit 1
end

# Uncomment this and the below RubyProf lines if you want profiling information.
# RubyProf.start

begin
  DynamoAutoscale.poller.run { |table_name, time| Timecop.travel(time) }
rescue Interrupt
  Ripl.start binding: binding
end

# Uncomment these and the above RubyProf line if you want profiling information.
# printer = RubyProf::FlatPrinter.new(RubyProf.stop)
# printer.print(STDOUT, min_percent: 2)

# Uncomment this if you want to drop into a REPL at the end of the test.
# Ripl.start binding: binding

DynamoAutoscale.tables.each do |_, table|
  table.report!

  if GRAPH
    path = table.graph! open: true
    puts "Graph saved to #{path}"
  end
end
